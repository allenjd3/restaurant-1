let restaurant,reviews;var newMap;document.addEventListener("DOMContentLoaded",e=>{fetchReviewsByRestaurantId(),initMap(),navigator.onLine&&(DBHelper.onlineForm(),DBHelper.onlineFavorite(getParameterByName("id")))}),initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.newMap=L.map("map",{center:[t.latlng.lat,t.latlng.lng],zoom:16,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoiamFsbGVuNCIsImEiOiJjamo0eXJxa3gxc3lpM2twMWhuY2lob3AwIn0.I2rZ1epi98n9LDHBZg_l_g",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.newMap))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)e(null,self.restaurant);else if(getParameterByName("id")){let t=getParameterByName("id");DBHelper.fetchRestaurantById(t,(t,r)=>{self.restaurant=r,r?(fillRestaurantHTML(),e(null,r)):console.error(t)})}else error="No restaurant id in URL",e(error,null)}),fetchReviewsByRestaurantId=((e=getParameterByName("id"))=>{DBHelper.fetchReviewsByRestaurantId(e,(e,t)=>{self.reviews=t,t||console.error(e)})}),fillRestaurantHTML=((e=self.restaurant)=>{const t=document.getElementById("restaurant-name"),r=document.getElementById("favorite-toggle");"true"==e.is_favorite?(r.setAttribute("checked","true"),r.setAttribute("data-favorited","true")):(r.removeAttribute("checked"),r.setAttribute("data-favorited","false")),t.innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const a=document.getElementById("restaurant-img");a.className="restaurant-img",a.setAttribute("alt",e.alt),a.src=DBHelper.imageUrlForRestaurant(e),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let r in e){const a=document.createElement("tr"),n=document.createElement("td");n.innerHTML=r,a.appendChild(n);const s=document.createElement("td");s.innerHTML=e[r],a.appendChild(s),t.appendChild(a)}}),fillReviewsHTML=((e=self.reviews)=>{const t=document.getElementById("reviews-container"),r=document.createElement("h2");if(r.innerHTML="Reviews",t.appendChild(r),!self.reviews){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const a=document.getElementById("reviews-list");self.reviews.forEach(e=>{a.appendChild(createReviewHTML(e))}),t.appendChild(a)}),createReviewHTML=(e=>{const t=document.createElement("li");t.setAttribute("id",`review-${e.id}`);const r=document.createElement("p");r.innerHTML=e.name,t.appendChild(r);const a=document.createElement("p");myDate=new Date(e.createdAt),a.innerHTML=`Posted: ${myDate.getMonth()+1}/${myDate.getDate()}/${myDate.getFullYear()} at ${myDate.getHours()}:${myDate.getMinutes()}`,t.appendChild(a);const n=document.createElement("p");switch(n.setAttribute("class","rating-stars"),Number(e.rating)){case 1:n.innerHTML='<img src="./lib/star_1.svg" alt="1 star" />';break;case 2:n.innerHTML='<img src="./lib/star_1.svg" alt="1 star" /> <img src="./lib/star_1.svg" alt="1 star" />';break;case 3:n.innerHTML='<img src="./lib/star_1.svg" alt="1 star" /> <img src="./lib/star_1.svg" alt="1 star" /> <img src="./lib/star_1.svg" alt="1 star" />';break;case 4:n.innerHTML='<img src="./lib/star_1.svg" alt="1 star" /> <img src="./lib/star_1.svg" alt="1 star" /> <img src="./lib/star_1.svg" alt="1 star" /> <img src="./lib/star_1.svg" alt="1 star" />';break;case 5:n.innerHTML='<img src="./lib/star_1.svg" alt="1 star" /> <img src="./lib/star_1.svg" alt="1 star" /> <img src="./lib/star_1.svg" alt="1 star" /> <img src="./lib/star_1.svg" alt="1 star" /> <img src="./lib/star_1.svg" alt="1 star" />';break;default:n.innerHTML="There was a problem"}t.appendChild(n);const s=document.createElement("p");return s.innerHTML=e.comments,t.appendChild(s),t});for(var radios=document.forms.reviewForm.elements.rating,i=0,max=radios.length;i<max;i++)radios[i].onclick=function(){let e=document.getElementsByClassName("review-star");for(var t=0;t<e.length;t++)e[t].style.opacity=.3;this.nextElementSibling.style.opacity=1,prevAll(this)};prevAll=(e=>{for(;e=e.previousElementSibling;)e.style.opacity=1});const form=document.forms.namedItem("reviewForm");form.addEventListener("submit",e=>{e.preventDefault();const t=getParameterByName("id"),r=new FormData(form);r.append("restaurant_id",parseInt(t));let a={};if(r.forEach((e,t)=>{a[t]=e}),navigator.onLine)fetch(`${DBHelper.BASE_URL}/reviews`,{method:"POST",body:r}).then(e=>e.json()).then(e=>{document.getElementById("reviews-list").appendChild(createReviewHTML(e)),location.href=`#review-${e.id}`,DBHelper.addReviewToCache(e,t),document.getElementById("review-form").reset()}).catch(e=>console.log(e));else{const e=document.getElementById("reviews-list");a.id=1e4*Math.random()+4999,a.createdAt=new Date(Date.now()),e.appendChild(createReviewHTML(a)),location.href=`#review-${a.id}`,DBHelper.addReviewToCache(a,t),DBHelper.offlineForm(a),document.getElementById("review-form").reset()}}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),r=document.createElement("li");r.innerHTML=e.name,r.setAttribute("aria-current","page"),t.appendChild(r)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const r=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return r?r[2]?decodeURIComponent(r[2].replace(/\+/g," ")):"":null});const toggleFavorite=document.getElementById("favorite-toggle");toggleFavorite.addEventListener("click",e=>{const t=getParameterByName("id");navigator.onLine?"true"==toggleFavorite.dataset.favorited?fetch(`${DBHelper.BASE_URL}/restaurants/${t}/?is_favorite=false`,{method:"POST"}).then(e=>e.json()).then(e=>{DBHelper.resetFavorite(e,t)}).catch(e=>{console.error(e)}):fetch(`${DBHelper.BASE_URL}/restaurants/${t}/?is_favorite=true`,{method:"POST"}).then(e=>e.json()).then(e=>{DBHelper.resetFavorite(e,t)}).catch(e=>{console.error(e)}):DBHelper.fetchRestaurantById(t,(e,r)=>{r?"true"==toggleFavorite.dataset.favorited?(r.is_favorite="false",DBHelper.resetFavorite(r,t),DBHelper.offlineFavorite(r)):(r.is_favorite="true",DBHelper.resetFavorite(r,t),DBHelper.offlineFavorite(r)):console.error(e)})});